{"version":3,"sources":["./src/app/applications/chat-web-app/chat-page/write-page/write-page.page.html","./src/app/applications/chat-web-app/chat-page/write-page/write-page-routing.module.ts","./src/app/applications/chat-web-app/chat-page/write-page/write-page.module.ts","./src/app/applications/chat-web-app/chat-page/write-page/write-page.page.scss","./src/app/applications/chat-web-app/chat-page/write-page/write-page.page.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,63D;;;;;;;;;;;;;;;;;;;ACA0B;AACc;AAEL;AAElD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,8DAAa;KACzB;CACF,CAAC;AAMF,IAAa,0BAA0B,GAAvC,MAAa,0BAA0B;CAAG;AAA7B,0BAA0B;IAJtC,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,0BAA0B,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;AChBE;AACM;AACF;AAEA;AAE4B;AAEvB;AAWlD,IAAa,mBAAmB,GAAhC,MAAa,mBAAmB;CAAG;AAAtB,mBAAmB;IAT/B,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,qFAA0B;SAC3B;QACD,YAAY,EAAE,CAAC,8DAAa,CAAC;KAC9B,CAAC;GACW,mBAAmB,CAAG;AAAH;;;;;;;;;;;;;ACnBhC;AAAe,6GAA8C,mM;;;;;;;;;;;;;;;;;;;;ACAX;AAEH;AACO;AAEL;AAOjD,IAAa,aAAa,GAA1B,MAAa,aAAa;IAExB,YACU,QAAsB,EACtB,WAA4B,EAC5B,QAAyB;QAFzB,aAAQ,GAAR,QAAQ,CAAc;QACtB,gBAAW,GAAX,WAAW,CAAiB;QAC5B,aAAQ,GAAR,QAAQ,CAAiB;QA4BnC,qBAAgB,GAAG,CAAC,OAAe,EAAE,EAAE;YACrC,OAAO,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;QAC5B,CAAC;IA7BG,CAAC;IAGL,QAAQ;IACR,CAAC;IAED,oBAAoB,CAAC,eAAuB;QAC1C,IAAI,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE;YAExD,sBAAsB;YACtB,MAAM,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;YAExB,IAAI,CAAC,OAAO,GAAG;gBACb,YAAY,EAAE,IAAI,CAAC,QAAQ,CAAC,kBAAkB,EAAE,CAAC,YAAY;gBAC7D,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE;gBAC1C,WAAW,EAAE,eAAe,CAAC,KAAK,CAAC,OAAO;gBAC1C,WAAW,EAAE,IAAI,CAAC,kBAAkB,EAAE;gBACtC,WAAW,EAAE,IAAI,CAAC,kBAAkB,EAAE;aACvC,CAAC;YACF,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACxC,IAAI,CAAC,WAAW,EAAE,CAAC;SACpB;aAAM;YACL,OAAO;SACR;QACD,eAAe,CAAC,SAAS,EAAE,CAAC;IAC9B,CAAC;IAMD,oCAAoC;IAC9B,WAAW;;YACf,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;gBACtC,OAAO,EAAE,4BAA4B;gBACrC,QAAQ,EAAE,IAAI;gBACd,KAAK,EAAE,SAAS;aACjB,CAAC,CAAC;YACH,IAAI,CAAC,OAAO,EAAE,CAAC;QACjB,CAAC;KAAA;CAEF;;YA5CqB,2DAAY;YACT,iEAAe;YAClB,8DAAe;;AALxB,aAAa;IALzB,+DAAS,CAAC;QACT,QAAQ,EAAE,gBAAgB;QAC1B,4PAAqC;;KAEtC,CAAC;2EAIoB,2DAAY;QACT,iEAAe;QAClB,8DAAe;GALxB,aAAa,CA+CzB;AA/CyB","file":"write-page-write-page-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot='start'>\\n      <ion-menu-button></ion-menu-button>\\n      <ion-back-button defaultHref='/applications/chat-web-app/chat-page'></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>write-page</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col size='12' size-sm='8' offset-sm='2'>\\n        <ion-card class='ion-padding'>\\n          <ion-card-header>\\n            <ion-card-title class='ion-padding-start'>Compose Message</ion-card-title>\\n            <ion-card-subtitle class='ion-padding-start'>Please enter the message that you want to send to</ion-card-subtitle>\\n          </ion-card-header>\\n          <ion-card-content>\\n\\n            <form #messageForm='ngForm' (ngSubmit)=\\\"messageFormProcessor(messageForm)\\\">\\n              <ion-list lines='none'>\\n                <ion-item>\\n                  <ion-label position='floating'>Write a message</ion-label>\\n                  <ion-textarea\\n                  ngModel\\n                  #message=ngModel\\n                  name='message'\\n                  clearInput\\n                  required\\n                  ></ion-textarea>\\n                </ion-item>\\n                <ion-item *ngIf='message.invalid && message.touched'>\\n                  <ion-label><p><ion-text color='danger'>You cannot leave an empty message</ion-text></p></ion-label>\\n                </ion-item>\\n              </ion-list>\\n              <ion-buttons slot='start'>\\n                <ion-button type='submit' color='primary'>\\n                  <ion-icon name=\\\"send\\\" slot='icon-only'></ion-icon>\\n                </ion-button>\\n              </ion-buttons>\\n            </form>\\n\\n          </ion-card-content>\\n        </ion-card>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { WritePagePage } from './write-page.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: WritePagePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class WritePagePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { WritePagePageRoutingModule } from './write-page-routing.module';\n\nimport { WritePagePage } from './write-page.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    WritePagePageRoutingModule\n  ],\n  declarations: [WritePagePage]\n})\nexport class WritePagePageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcGxpY2F0aW9ucy9jaGF0LXdlYi1hcHAvY2hhdC1wYWdlL3dyaXRlLXBhZ2Uvd3JpdGUtcGFnZS5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { WriteService } from './write.service';\nimport { UsernameService } from '../username.service';\nimport { Message } from './message';\nimport { ToastController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-write-page',\n  templateUrl: './write-page.page.html',\n  styleUrls: ['./write-page.page.scss'],\n})\nexport class WritePagePage implements OnInit {\n\n  constructor(\n    private writeSrv: WriteService,\n    private usernameSrv: UsernameService,\n    private toastCtl: ToastController\n  ) { }\n  private message: Message;\n\n  ngOnInit() {\n  }\n\n  messageFormProcessor(messageFormData: NgForm) {\n    if (this.messageValidator(messageFormData.value.message)) {\n\n      // Fetch Date and time\n      const date = new Date();\n\n      this.message = {\n        receiverName: this.writeSrv.getReceiverDetails().receiverName,\n        senderName: this.usernameSrv.getUsername(),\n        messageBody: messageFormData.value.message,\n        messageDate: date.toLocaleDateString(),\n        messageTime: date.toLocaleTimeString()\n      };\n      this.writeSrv.sendMessage(this.message);\n      this.messageSent();\n    } else {\n      return;\n    }\n    messageFormData.resetForm();\n  }\n\n  messageValidator = (message: string) => {\n    return message.length > 1;\n  }\n\n  // Show a toast when message is sent\n  async messageSent() {\n    const sent = await this.toastCtl.create({\n      message: 'Message sent successfully!',\n      duration: 1000,\n      color: 'primary'\n    });\n    sent.present();\n  }\n\n}\n"],"sourceRoot":"webpack:///"}