{"version":3,"sources":["./src/app/applications/chat-web-app/chat-page/chat-page.page.html","./src/app/applications/chat-web-app/chat-page/inbox/inbox.component.html","./src/app/applications/chat-web-app/chat-page/options/options.component.html","./src/app/applications/chat-web-app/chat-page/people/people.component.html","./src/app/applications/chat-web-app/chat-page/chat-page-routing.module.ts","./src/app/applications/chat-web-app/chat-page/chat-page.module.ts","./src/app/applications/chat-web-app/chat-page/chat-page.page.scss","./src/app/applications/chat-web-app/chat-page/chat-page.page.ts","./src/app/applications/chat-web-app/chat-page/chat.service.ts","./src/app/applications/chat-web-app/chat-page/inbox/inbox.component.scss","./src/app/applications/chat-web-app/chat-page/inbox/inbox.component.ts","./src/app/applications/chat-web-app/chat-page/inbox/inbox.guard.ts","./src/app/applications/chat-web-app/chat-page/inbox/inbox.service.ts","./src/app/applications/chat-web-app/chat-page/options/options.component.scss","./src/app/applications/chat-web-app/chat-page/options/options.component.ts","./src/app/applications/chat-web-app/chat-page/people/people.component.scss","./src/app/applications/chat-web-app/chat-page/people/people.component.ts","./src/app/applications/chat-web-app/chat-page/write-page/write.guard.ts","./src/app/applications/chat-web-app/chat-page/write-page/write.service.ts"],"names":[],"mappings":"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","file":"chat-page-chat-page-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot='start'>\\n      <ion-menu-button></ion-menu-button>\\n      <ion-back-button defaultHref='/applications/chat-web-app'></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Chat</ion-title>\\n    <ion-buttons slot='end'>\\n      <!-- <ion-button\\n      expand='block'\\n      color='primary'\\n      fill='outline'\\n      (click)='showPeopleModal()'>\\n      <ion-icon name=\\\"person\\\" slot='start'></ion-icon>\\n        People\\n      </ion-button> -->\\n      <ion-button\\n      (click)='showOptions($event)'\\n      color='primary'\\n      ><ion-icon name=\\\"settings\\\" slot='start'></ion-icon>Options</ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col size='12' size-sm='8' offset-sm='2'>\\n        <ion-card class='ion-padding'>\\n          <ion-card-header>\\n            <ion-card-title class='ion-padding-start'>Feature being worked on</ion-card-title>\\n            <ion-card-subtitle class='ion-padding-start'>This part of the application is being developed. More features are being added.</ion-card-subtitle>\\n          </ion-card-header>\\n          <ion-card-content>\\n            <ion-list lines='none'>\\n              <ion-list-header>The following features are being added</ion-list-header>\\n              <ion-item>\\n                <ion-icon name=\\\"eye\\\" slot='start'></ion-icon>\\n                <ion-label><p>Ability to find other people to connect to</p></ion-label>\\n              </ion-item>\\n              <ion-item>\\n                <ion-icon name=\\\"person-add\\\" slot='start'></ion-icon>\\n                <ion-label><p>Being able to add friends</p></ion-label>\\n              </ion-item>\\n              <ion-item>\\n                <ion-icon name=\\\"chatbubbles\\\" slot='start'></ion-icon>\\n                <ion-label><p>Being able to send message</p></ion-label>\\n              </ion-item>\\n              <ion-item>\\n                <ion-icon name=\\\"chatbubbles\\\" slot='start'></ion-icon>\\n                <ion-label><p>Being able to chat in real time</p></ion-label>\\n              </ion-item>\\n            </ion-list>\\n          </ion-card-content>\\n        </ion-card>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\\n\"","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot='start'>\\n      <ion-menu-button></ion-menu-button>\\n      <ion-back-button defaultHref='/applications/chat-web-app/chat-page'></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Inbox</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col size='12' size-sm='8' offset-sm='2'>\\n        <ion-card class='ion-padding' *ngFor='let i of messages'>\\n          <ion-card-header>\\n            <ion-card-title class='ion-padding-start'>Sender: {{ i.senderName }}</ion-card-title>\\n            <ion-card-subtitle class='ion-padding-start'>Sent on {{i.messageDate}} at {{i.messageTime}} </ion-card-subtitle>\\n          </ion-card-header>\\n          <ion-card-content>\\n            <p class='ion-padding-start'>{{ i.messageBody }}</p>\\n          </ion-card-content>\\n        </ion-card>\\n\\n        <ion-card class='ion-padding' *ngIf='!this.messagesInInbox'>\\n          <ion-card-header>\\n            <ion-card-title class='ion-padding-start'>You dont have any messages</ion-card-title>\\n            <ion-card-subtitle class='ion-padding-start'>If you have any messages then they will appear here</ion-card-subtitle>\\n          </ion-card-header>\\n        </ion-card>\\n\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\"","export default \"<ion-list lines='none'>\\n  <ion-item button (click)=\\\"gotoPage('inbox')\\\">\\n    <ion-icon name=\\\"mail\\\" slot='start' color='primary'></ion-icon>\\n    <ion-label>Inbox</ion-label>\\n  </ion-item>\\n  <ion-item button (click)=\\\"gotoPage('people')\\\">\\n    <ion-icon name=\\\"people\\\" slot='start' color='primary'></ion-icon>\\n    <ion-label>People</ion-label>\\n  </ion-item>\\n  <ion-item button (click)=\\\"logOut()\\\">\\n    <ion-icon name=\\\"log-out\\\" slot='start' color='primary'></ion-icon>\\n    <ion-label>Logout</ion-label>\\n  </ion-item>\\n</ion-list>\"","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>People</ion-title>\\n    <ion-buttons slot='end'>\\n      <ion-button (click)='closePeopleModal()' color='danger'><ion-icon name=\\\"close-circle-outline\\\" slot='icon-only'></ion-icon></ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col size='12' size-sm='8' offset-sm='2'>\\n        <ion-card class='ion-padding'>\\n          <ion-card-content>\\n            <ion-list lines='none' *ngFor='let i of users'>\\n              <ion-item>\\n                <ion-label>{{ i.username }}</ion-label>\\n                <ion-buttons slot='end'>\\n                  <ion-button\\n                  color='primary'\\n                  (click)='redirectToWriteMessage(i._id, i.username)'\\n                  ><ion-icon name=\\\"chatbubbles\\\" slot='icon-only'></ion-icon></ion-button>\\n                </ion-buttons>\\n              </ion-item>\\n            </ion-list>\\n          </ion-card-content>\\n        </ion-card>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ChatPagePage } from './chat-page.page';\nimport { WriteGuard } from './write-page/write.guard';\nimport { InboxComponent } from './inbox/inbox.component';\nimport { InboxGuard } from './inbox/inbox.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ChatPagePage\n  },\n  {\n    path: 'write-page',\n    loadChildren: () => import('./write-page/write-page.module').then( m => m.WritePagePageModule),\n    canLoad: [WriteGuard]\n  },\n  {\n    path: 'inbox-page',\n    component: InboxComponent,\n    canLoad: [InboxGuard]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ChatPagePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ChatPagePageRoutingModule } from './chat-page-routing.module';\n\nimport { ChatPagePage } from './chat-page.page';\nimport { HttpClientModule } from '@angular/common/http';\nimport { PeopleComponent } from './people/people.component';\nimport { OptionsComponent } from './options/options.component';\nimport { InboxComponent } from './inbox/inbox.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ChatPagePageRoutingModule,\n    HttpClientModule\n  ],\n  declarations: [ChatPagePage, PeopleComponent, OptionsComponent, InboxComponent],\n  entryComponents: [PeopleComponent, OptionsComponent]\n})\nexport class ChatPagePageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcGxpY2F0aW9ucy9jaGF0LXdlYi1hcHAvY2hhdC1wYWdlL2NoYXQtcGFnZS5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { ToastController, ModalController, PopoverController } from '@ionic/angular';\nimport { UsernameService } from './username.service';\nimport { ChatService } from './chat.service';\nimport { OptionsComponent } from './options/options.component';\n\n@Component({\n  selector: 'app-chat-page',\n  templateUrl: './chat-page.page.html',\n  styleUrls: ['./chat-page.page.scss'],\n})\nexport class ChatPagePage implements OnInit {\n\n  constructor(\n    private toastCtl: ToastController,\n    private us: UsernameService,\n    private chat: ChatService,\n    private popCtl: PopoverController\n  ) { }\n  private username: string;\n\n  ngOnInit() {\n    // Getting the username before popping the toast\n    this.username = this.us.getUsername();\n    this.welcomeToast();\n  }\n\n  async welcomeToast() {\n    const welcomeToast = await this.toastCtl.create({\n      message: 'Welcome ' + this.username,\n      duration: 2000,\n      color: 'primary',\n      buttons: [{\n        icon: 'close',\n        role: 'cancel'\n      }]\n    });\n    welcomeToast.present();\n  }\n\n  async showOptions(ev: any) {\n    const options = await this.popCtl.create({\n      component: OptionsComponent,\n      event: ev,\n      translucent: true\n    });\n    return await options.present();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Subject } from 'rxjs';\nimport { UsernameService } from './username.service';\nimport { ServerService } from '../../server.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChatService {\n\n  constructor(\n    private http: HttpClient,\n    private userSrv: UsernameService,\n    private serverAddress: ServerService\n  ) { }\n  private usersData: any;\n  private updatedUsers = new Subject<[]>();\n\n  getUsers() {\n    this.http.post(this.serverAddress.getServerAddress() + '/get/usersandid', {username: this.userSrv.getUsername()})\n      .subscribe(users => {\n        console.log(users);\n        this.usersData = users;\n        this.updatedUsers.next(this.usersData);\n    });\n  }\n\n  getUpdatedUsers() {\n    return this.updatedUsers.asObservable();\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcGxpY2F0aW9ucy9jaGF0LXdlYi1hcHAvY2hhdC1wYWdlL2luYm94L2luYm94LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { InboxService } from './inbox.service';\nimport { Message } from '../write-page/message';\n\n@Component({\n  selector: 'app-inbox',\n  templateUrl: './inbox.component.html',\n  styleUrls: ['./inbox.component.scss'],\n})\nexport class InboxComponent implements OnInit, OnDestroy {\n\n  constructor(\n    private inboxSrv: InboxService\n  ) { }\n  public messages: Message[];\n  public messagesInInbox = true;\n  private inboxServiceRunner;\n\n  ngOnInit() {\n    // Subscription to update messages automatically\n    this.inboxSrv.getMessages();\n    this.inboxSrv.getUpdatedMessages()\n      .subscribe(letter => {\n        this.messages = letter;\n        if (letter.length < 1) {\n          this.messagesInInbox = false;\n        }\n      });\n    // Get new messages if any every 5 seconds\n    this.inboxServiceRunner = setInterval(() => {\n      this.inboxSrv.getMessages();\n    }, 5000);\n  }\n\n  ngOnDestroy() {\n    if (this.inboxServiceRunner) {\n      clearInterval(this.inboxServiceRunner);\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanLoad, Route, UrlSegment, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { UsernameService } from '../username.service';\nimport { NavController } from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InboxGuard implements CanLoad {\n\n  constructor(\n    private username: UsernameService,\n    private navCtl: NavController\n  ) {}\n\n  canLoad(\n    route: Route,\n    segments: UrlSegment[]): Observable<boolean> | Promise<boolean> | boolean {\n\n      if (!this.username.isUserSet()) {\n        this.navCtl.navigateBack('/applications/chat-web-app');\n      }\n      return this.username.isUserSet();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { UsernameService } from '../username.service';\nimport { Message } from '../write-page/message';\nimport { Subject } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { ServerService } from 'src/app/applications/server.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InboxService {\n\n  constructor(\n    private username: UsernameService,\n    private http: HttpClient,\n    private serverAddress: ServerService\n  ) { }\n  private messages: Message[];\n  private updatedMessages = new Subject<Message[]>();\n\n  // Returns the messages\n  getMessages() {\n    // tslint:disable-next-line: max-line-length\n    this.http.post<{message: Message[], statusCode: string}>(this.serverAddress.getServerAddress() + '/pull/message', {username: this.username.getUsername()})\n      .subscribe(res => {\n        this.messages = res.message;\n        this.updatedMessages.next(this.messages);\n      });\n  }\n\n  // Put message\n  // A letter is a single message with the name of sender and receiver\n  putMessages = (letter: Message) => {\n    this.messages.push(letter);\n    // Call subject to update\n    this.updatedMessages.next([...this.messages]);\n  }\n\n  getUpdatedMessages = () => this.updatedMessages.asObservable();\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcGxpY2F0aW9ucy9jaGF0LXdlYi1hcHAvY2hhdC1wYWdlL29wdGlvbnMvb3B0aW9ucy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { NavController, ModalController, PopoverController, AlertController, ToastController } from '@ionic/angular';\nimport { PeopleComponent } from '../people/people.component';\nimport { UsernameService } from '../username.service';\n\n@Component({\n  selector: 'app-options',\n  templateUrl: './options.component.html',\n  styleUrls: ['./options.component.scss'],\n})\nexport class OptionsComponent implements OnInit {\n\n  constructor(\n    private navCtl: NavController,\n    private modal: ModalController,\n    private popover: PopoverController,\n    private userSrv: UsernameService,\n    private alertCtl: AlertController,\n    private toastCtl: ToastController\n  ) { }\n\n  ngOnInit() {}\n\n  gotoPage(pageName: string) {\n    // Show people modal\n    if (pageName === 'people') {\n      this.popover.dismiss();\n      this.showPeopleModal();\n    }\n\n    // Goto inbox page\n    if (pageName === 'inbox') {\n      this.popover.dismiss();\n      this.navCtl.navigateForward('/applications/chat-web-app/chat-page/inbox-page');\n    }\n  }\n\n  logOut() {\n    this.showLogoutAlert();\n  }\n\n  async showLogoutAlert() {\n    this.popover.dismiss();\n    const logoutAlert = await this.alertCtl.create({\n      header: 'Logout',\n      subHeader: 'Are you sure?',\n      buttons: [\n        {\n          text: 'Yes',\n          role: 'yes',\n          handler: async () => {\n            // Destroy username\n            this.userSrv.setUsername('');\n            // Show the logged out toast\n            await this.showLoggedOutToast();\n            // Redirect to applications page after 1 second\n            this.navCtl.navigateBack('/applications');\n          }\n        },\n        {\n          text: 'No',\n          role: 'no'\n        }\n      ]\n    });\n    await logoutAlert.present();\n  }\n\n  async showLoggedOutToast() {\n    const loggedOutToast = await this.toastCtl.create({\n      message: 'Successfully logged out! Please wait while we redirect you',\n      color: 'primary',\n      duration: 1000\n    });\n    loggedOutToast.present();\n  }\n\n  async showPeopleModal() {\n    const peopleModal = await this.modal.create({\n      component: PeopleComponent\n    });\n    return await peopleModal.present();\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcGxpY2F0aW9ucy9jaGF0LXdlYi1hcHAvY2hhdC1wYWdlL3Blb3BsZS9wZW9wbGUuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { ChatService } from '../chat.service';\nimport { ModalController, NavController } from '@ionic/angular';\nimport { WriteService } from '../write-page/write.service';\nimport { UsernameService } from '../username.service';\n\n@Component({\n  selector: 'app-people',\n  templateUrl: './people.component.html',\n  styleUrls: ['./people.component.scss'],\n})\nexport class PeopleComponent implements OnInit {\n\n  constructor(\n    private chat: ChatService,\n    private modal: ModalController,\n    private navCtl: NavController,\n    private writeSrv: WriteService,\n    private username: UsernameService\n  ) { }\n  public users: [];\n\n  ngOnInit() {\n    // Get updated users via subject\n    this.chat.getUsers();\n    this.chat.getUpdatedUsers().subscribe(users => {\n      this.users = users;\n      console.log(this.users);\n    });\n  }\n\n  // executeOnceFuntion() {\n  //   const index = this.users.findIndex(x => {\n  //     return x.username === this.username.getUsername();\n  //   });\n  //   this.users.splice(index, 1);\n  //   this.executeOnce = false;\n  //   return;\n  // }\n\n  closePeopleModal = () => {\n    this.modal.dismiss();\n  }\n\n  redirectToWriteMessage(receiverId: string, receiverName: string) {\n    this.closePeopleModal();\n    // Write service code here\n    this.writeSrv.setReceiverDetails(receiverId, receiverName);\n    // Redirect to write page\n    this.navCtl.navigateForward('/applications/chat-web-app/chat-page/write-page');\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanLoad, Route, UrlSegment, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { WriteService } from './write.service';\nimport { NavController } from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WriteGuard implements CanLoad {\n\n  constructor(\n    private writeSrv: WriteService,\n    private navCtl: NavController\n  ) {}\n\n  canLoad(\n    route: Route,\n    segments: UrlSegment[]): Observable<boolean> | Promise<boolean> | boolean {\n\n      if (!this.writeSrv.isReceiverSet()) {\n        this.navCtl.navigateBack('/applications/chat-web-app');\n      }\n\n      return this.writeSrv.isReceiverSet();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Message } from './message';\nimport { HttpClient } from '@angular/common/http';\nimport { InboxService } from '../inbox/inbox.service';\nimport { ServerService } from 'src/app/applications/server.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WriteService {\n\n  constructor(\n    private http: HttpClient,\n    private inboxSrv: InboxService,\n    private serverAddress: ServerService\n  ) { }\n  private receiverDetails: {\n    receiverId: string,\n    receiverName: string\n  };\n\n  setReceiverDetails(id: string, name: string) {\n    this.receiverDetails = {receiverId: id, receiverName: name};\n  }\n\n  getReceiverDetails() {\n    return this.receiverDetails;\n  }\n\n  isReceiverSet() {\n    return this.receiverDetails.receiverName.length > 0;\n  }\n\n  // Push message to the database\n  sendMessage(message: Message) {\n    this.http.post<{res: string}>(this.serverAddress.getServerAddress() + '/push/message', message)\n      .subscribe(val => {\n        console.log(val.res);\n      });\n    // View message subject here to view message as they come i.e refresh inbox when new message is sent\n    this.inboxSrv.getMessages();\n  }\n}\n"],"sourceRoot":"webpack:///"}