{"version":3,"sources":["src/app/applications/expenses/expense-board/expense-board-preview/expense-board-preview.component.html","src/app/applications/expenses/expense-board/expense-board.page.html","src/app/applications/expenses/tools/color-selector/color-selector.component.html","src/app/applications/expenses/expense-board/expense-board-preview/expense-board-preview.component.scss","src/app/applications/expenses/expense-board/expense-board-preview/expense-board-preview.component.ts","src/app/applications/expenses/expense-board/expense-board-routing.module.ts","src/app/applications/expenses/expense-board/expense-board.module.ts","src/app/applications/expenses/expense-board/expense-board.page.scss","src/app/applications/expenses/expense-board/expense-board.page.ts","src/app/applications/expenses/tools/color-selector/color-selector.component.scss","src/app/applications/expenses/tools/color-selector/color-selector.component.ts","src/app/applications/expenses/tools/tools.module.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-card class='ion-padding'>\\n  <ion-card-header>\\n    <ion-card-title>\\n      <ion-item *ngIf='board.boardName != \\\"\\\"' lines='none'>\\n        <h2><ion-text [color]='board.boardNameColor'>Preview of '{{board.boardName}}' expense board</ion-text></h2>\\n        <app-color-selector (color)=\\\"selectColor($event,'title')\\\"></app-color-selector>\\n      </ion-item>\\n      <h2 *ngIf='board.boardName == \\\"\\\"'>\\n        No preview available yet\\n      </h2>\\n    </ion-card-title>\\n    <ion-card-subtitle>\\n      <ion-item lines='none' *ngIf='board.boardName != \\\"\\\"'>\\n        <ion-text [color]='board.boardSubtitleColor'>{{board.boardSubtitle}}</ion-text>\\n        <app-color-selector (color)=\\\"selectColor($event,'subtitle')\\\"></app-color-selector>\\n      </ion-item>\\n      <div *ngIf='board.boardName == \\\"\\\"'>Preview of the board will be shown here to make some final changes before adding it to your expenses board</div>\\n    </ion-card-subtitle>\\n  </ion-card-header>\\n  <ion-card-content>\\n    <ion-list lines='none' *ngIf=\\\"board.boardName != ''\\\">\\n      <ion-item *ngFor='let j of board.boardExpenses; let k = index'>\\n        <ion-label [color]='j.expensesColor'> {{j.expensesName}} </ion-label>\\n        <ion-buttons slot='end'>\\n          <ion-chip>\\n            <ion-label> {{j.expensesValue}} </ion-label>\\n          </ion-chip>\\n          <app-color-selector (color)=\\\"selectColor($event,k)\\\"></app-color-selector>\\n          <ion-button color='dark' (click)='deleteExpense(j)'>\\n            <ion-icon name=\\\"close\\\" slot='icon-only'></ion-icon>\\n          </ion-button>\\n        </ion-buttons>\\n      </ion-item>\\n    </ion-list>\\n    <ion-row *ngIf='board.boardName != \\\"\\\"'>\\n      <ion-col size='12' size-sm='6'>\\n        <ion-button\\n        fill='outline'\\n        expand='block'\\n        color='dark'\\n        (click)='raiseAddBoard()'\\n        >Add\\n        <ion-icon name=\\\"add\\\" slot='end'></ion-icon>\\n        </ion-button>\\n      </ion-col>\\n      <ion-col size='12' size-sm='6'>\\n        <ion-button\\n        fill='outline'\\n        expand='block'\\n        color='dark'\\n        (click)='raiseDelBoard()'\\n        >Delete\\n        <ion-icon name=\\\"trash\\\" slot='end'></ion-icon>\\n        </ion-button>\\n      </ion-col>\\n    </ion-row>\\n  </ion-card-content>\\n</ion-card>\"","export default \"<ion-content>\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col size='12' size-sm='8' offset-sm='2'>\\n        <app-expense-board-preview></app-expense-board-preview>\\n      </ion-col>\\n    </ion-row>\\n    <ion-row>\\n      <ion-col size='12' size-sm='4' offset-sm='2'>\\n        <ion-card class='ion-padding'>\\n          <ion-card-header>\\n            <ion-card-title><h1>\\n              New expenses board detail\\n            </h1></ion-card-title>\\n            <ion-card-subtitle>Enter the details of new expenses board</ion-card-subtitle>\\n          </ion-card-header>\\n          <ion-card-content>\\n            <form #boardForm='ngForm' (ngSubmit)='onSubmitBoardForm(boardForm)'>\\n              <ion-list lines='none'>\\n                <ion-item>\\n                  <ion-label position='floating'>Board Title</ion-label>\\n                  <ion-input type='text' clearInput\\n                  ngModel\\n                  name='boardTitle'\\n                  #boardTitle='ngModel'\\n                  required\\n                  ></ion-input>\\n                </ion-item>\\n                <ion-item *ngIf='boardTitle.touched && boardTitle.invalid'><ion-label color='danger'>Please enter board title</ion-label></ion-item>\\n                <ion-item>\\n                  <ion-label position='floating'>Board Subtitle</ion-label>\\n                  <ion-input type='text' clearInput\\n                  ngModel\\n                  name='boardSubtitle'\\n                  #boardSubtitle='ngModel'\\n                  required\\n                  ></ion-input>\\n                </ion-item>\\n                <ion-item *ngIf='boardSubtitle.touched && boardSubtitle.invalid'><ion-label color='danger'>Please enter board subtitle</ion-label></ion-item>\\n              </ion-list>\\n              <ion-row>\\n                <ion-col size='12'>\\n                  <ion-button type='submit'\\n                    expand='block'\\n                    fill='outline'\\n                    color='dark'\\n                    [disabled]='!(boardTitle.valid && boardSubtitle.valid)'\\n                    >\\n                    Create\\n                    <ion-icon name=\\\"create\\\" slot='end'></ion-icon>\\n                  </ion-button>\\n                </ion-col>\\n              </ion-row>\\n            </form>\\n          </ion-card-content>\\n        </ion-card>\\n      </ion-col>\\n      <ion-col size='12' size-sm='4'>\\n        <ion-card class='ion-padding'>\\n          <ion-card-header>\\n            <ion-card-title><h1>\\n              Add expenses to the board\\n            </h1></ion-card-title>\\n            <ion-card-subtitle>\\n              Add details of expenses to the board\\n            </ion-card-subtitle>\\n          </ion-card-header>\\n          <ion-card-content>\\n            <form #expensesForm='ngForm' (ngSubmit)='ongSubmitExpensesForm(expensesForm)'>\\n              <ion-list lines='none'>\\n                <ion-item>\\n                  <ion-label position='floating'>Expense Name</ion-label>\\n                  <ion-input type='text'\\n                  ngModel\\n                  #expenseName='ngModel'\\n                  name='expenseName'\\n                  clearInput\\n                  required\\n                  ></ion-input>\\n                </ion-item>\\n                <ion-item *ngIf='expenseName.invalid && expenseName.touched'><ion-label color='danger'>Expense name required</ion-label></ion-item>\\n              <ion-item>\\n                <ion-label position='floating'>Expense amount</ion-label>\\n                <ion-input\\n                type='number'\\n                ngModel\\n                #expenseAmount='ngModel'\\n                name='expenseAmount'\\n                clearInput\\n                required\\n                ></ion-input>\\n              </ion-item>\\n              <ion-item *ngIf='expenseAmount.invalid && expenseAmount.touched'><ion-label color='danger'>Expense amount required</ion-label></ion-item>\\n              </ion-list>\\n              <ion-row>\\n                <ion-col size='12'>\\n                  <ion-button\\n                  type='submit'\\n                  expand='block'\\n                  fill='outline'\\n                  color='dark'\\n                  [disabled]='!(expenseName.valid && expenseAmount.valid)'\\n                  >\\n                  Add\\n                  <ion-icon name=\\\"add-circle-outline\\\" slot='end'></ion-icon></ion-button>\\n                </ion-col>\\n              </ion-row>\\n            </form>\\n          </ion-card-content>\\n        </ion-card>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\\n\"","export default \"<ion-item lines='none'>\\n  <ion-label><ion-icon name=\\\"color-palette\\\"></ion-icon></ion-label>\\n  <ion-select\\n  [interfaceOptions]='myPopOver' interface='popover' (ionChange)='dispColor(color.value)' #color\\n  >\\n    <ion-select-option value='primary'>Primary</ion-select-option>\\n    <ion-select-option value='secondary'>Secondary</ion-select-option>\\n    <ion-select-option value='tertiary'>Tertiary</ion-select-option>\\n    <ion-select-option value='success'>Success</ion-select-option>\\n    <ion-select-option value='warning'>Warning</ion-select-option>\\n    <ion-select-option value='danger'>Danger</ion-select-option>\\n    <ion-select-option value='light'>Light</ion-select-option>\\n    <ion-select-option value='medium'>Medium</ion-select-option>\\n    <ion-select-option value='dark'>Dark</ion-select-option>\\n    <ion-select-option value='none'>None</ion-select-option>\\n  </ion-select>\\n</ion-item>\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcGxpY2F0aW9ucy9leHBlbnNlcy9leHBlbnNlLWJvYXJkL2V4cGVuc2UtYm9hcmQtcHJldmlldy9leHBlbnNlLWJvYXJkLXByZXZpZXcuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { ExpensesService } from '../../expenses.service';\nimport { AlertController } from '@ionic/angular';\nimport { ExpensesBoard } from '../../expenses-board';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-expense-board-preview',\n  templateUrl: './expense-board-preview.component.html',\n  styleUrls: ['./expense-board-preview.component.scss'],\n})\nexport class ExpenseBoardPreviewComponent implements OnInit {\n  board: ExpensesBoard;\n\n  constructor(\n    private eb: ExpensesService,\n    private alertController: AlertController,\n    private router: Router\n    ) { }\n\n  ngOnInit() {\n    this.board = {\n      boardName: '',\n      boardSubtitle: '',\n      boardExpenses: [],\n      boardNameColor: '',\n      boardSubtitleColor: ''\n    };\n    this.eb.getUpdatedCurrentBoard().subscribe(res => {\n      this.board = res;\n    });\n  }\n\n  async raiseAddBoard() {\n    const myAddAlert = await this.alertController.create({\n      header: 'Are you sure?',\n      subHeader: 'Add this board?',\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel'\n        },\n        {\n          text: 'Yes',\n          role: 'ok',\n          handler: () => {\n            this.addBoard();\n          }\n        }\n      ]\n    });\n    await myAddAlert.present();\n  }\n\n  async raiseDelBoard() {\n    const myDelAlert = await this.alertController.create({\n      header: 'Are you sure?',\n      subHeader: 'Delete this board?',\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel'\n        },\n        {\n          text: 'Yes',\n          role: 'ok',\n          handler: () => {\n            this.delBoard();\n          }\n        }\n      ]\n    });\n    await myDelAlert.present();\n  }\n\n  addBoard() {\n    this.eb.putIntoExpensesBoards(this.board);\n    this.eb.deleteCurrentBoard();\n    this.router.navigateByUrl('/applications/expenses/view-expenses');\n  }\n\n  delBoard() {\n    this.board = {\n      boardName: '',\n      boardSubtitle: '',\n      boardExpenses: [],\n      boardNameColor: '',\n      boardSubtitleColor: ''\n    };\n    this.eb.deleteCurrentBoard();\n  }\n\n  deleteExpense(index: number) {\n    this.board.boardExpenses.splice(index, 1);\n  }\n\n  selectColor(color: string, element: string) {\n    if (element == 'title') {\n      this.board.boardNameColor = color;\n    } else if (element == 'subtitle') {\n      this.board.boardSubtitleColor = color;\n    } else {\n      this.board.boardExpenses[Number(element)].expensesColor = color;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ExpenseBoardPage } from './expense-board.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ExpenseBoardPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ExpenseBoardPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ExpenseBoardPageRoutingModule } from './expense-board-routing.module';\n\nimport { ExpenseBoardPage } from './expense-board.page';\nimport { ExpenseBoardPreviewComponent } from './expense-board-preview/expense-board-preview.component';\nimport { ToolsModule } from '../tools/tools.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ExpenseBoardPageRoutingModule,\n    ToolsModule\n  ],\n  declarations: [ExpenseBoardPage, ExpenseBoardPreviewComponent]\n})\nexport class ExpenseBoardPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcGxpY2F0aW9ucy9leHBlbnNlcy9leHBlbnNlLWJvYXJkL2V4cGVuc2UtYm9hcmQucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { ExpensesBoard } from '../expenses-board';\nimport { ExpensesService } from '../expenses.service';\nimport { NgForm } from '@angular/forms';\nimport { Expenses } from '../expenses';\n\n@Component({\n  selector: 'app-expense-board',\n  templateUrl: './expense-board.page.html',\n  styleUrls: ['./expense-board.page.scss'],\n})\nexport class ExpenseBoardPage implements OnInit {\n  boards: ExpensesBoard[] = [];\n  expenses: Expenses[] = [];\n\n  currentBoard: ExpensesBoard;\n\n  constructor(private eb: ExpensesService) { }\n\n  ngOnInit() {\n    this.currentBoard = {\n      boardName: '',\n      boardSubtitle: '',\n      boardExpenses: [],\n      boardNameColor: '',\n      boardSubtitleColor: ''\n    };\n    this.eb.getUpdatedExpensesBoards().subscribe(res => {\n      this.boards = res;\n    });\n    this.eb.getUpdatedCurrentBoard().subscribe(res => {\n      this.currentBoard = res;\n      this.expenses = res.boardExpenses;\n    });\n  }\n\n  onSubmitBoardForm(boardData: NgForm) {\n    this.eb.putCurrentBoard({\n      boardName: boardData.value.boardTitle,\n      boardSubtitle: boardData.value.boardSubtitle,\n      boardExpenses: this.expenses,\n      boardNameColor: '',\n      boardSubtitleColor: ''\n    });\n    boardData.resetForm();\n  }\n\n  ongSubmitExpensesForm(expensesData: NgForm) {\n    this.expenses.push({\n      expensesName: expensesData.value.expenseName,\n      expensesValue: expensesData.value.expenseAmount,\n      expensesColor: ''\n    });\n    if (this.currentBoard) {\n      this.eb.putCurrentBoard(this.currentBoard = {\n        boardName: this.currentBoard.boardName,\n        boardSubtitle: this.currentBoard.boardSubtitle,\n        boardExpenses: this.expenses,\n        boardNameColor: '',\n        boardSubtitleColor: ''\n      });\n    }\n    expensesData.resetForm();\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcGxpY2F0aW9ucy9leHBlbnNlcy90b29scy9jb2xvci1zZWxlY3Rvci9jb2xvci1zZWxlY3Rvci5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-color-selector',\n  templateUrl: './color-selector.component.html',\n  styleUrls: ['./color-selector.component.scss'],\n})\nexport class ColorSelectorComponent implements OnInit {\n  @Output() color = new EventEmitter<string>();\n\n  constructor() { }\n\n  myPopOver: any = {\n    header: 'Color',\n    subheader: 'Pick one',\n    message: 'Please pick a color'\n  };\n\n  ngOnInit() {}\n\n  dispColor(color: string) {\n    this.color.emit(color);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ColorSelectorComponent } from './color-selector/color-selector.component';\nimport { IonicModule } from '@ionic/angular';\n\n\n\n@NgModule({\n  declarations: [ColorSelectorComponent],\n  imports: [\n    CommonModule,\n    IonicModule\n  ],\n  exports: [\n    ColorSelectorComponent\n  ]\n})\nexport class ToolsModule { }\n"],"sourceRoot":"webpack:///","file":"expense-board-expense-board-module-es5.js"}