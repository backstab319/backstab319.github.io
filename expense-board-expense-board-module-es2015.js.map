{"version":3,"sources":["./src/app/applications/expenses/expense-board/expense-board-preview/expense-board-preview.component.html","./src/app/applications/expenses/expense-board/expense-board.page.html","./src/app/applications/expenses/tools/color-selector/color-selector.component.html","./src/app/applications/expenses/expense-board/expense-board-preview/expense-board-preview.component.scss","./src/app/applications/expenses/expense-board/expense-board-preview/expense-board-preview.component.ts","./src/app/applications/expenses/expense-board/expense-board-routing.module.ts","./src/app/applications/expenses/expense-board/expense-board.module.ts","./src/app/applications/expenses/expense-board/expense-board.page.scss","./src/app/applications/expenses/expense-board/expense-board.page.ts","./src/app/applications/expenses/tools/color-selector/color-selector.component.scss","./src/app/applications/expenses/tools/color-selector/color-selector.component.ts","./src/app/applications/expenses/tools/tools.module.ts"],"names":[],"mappings":"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","file":"expense-board-expense-board-module-es2015.js","sourcesContent":["export default \"<ion-card class='ion-padding'>\\n  <ion-card-header>\\n    <ion-card-title>\\n      <ion-item *ngIf='board.boardName != \\\"\\\"' lines='none'>\\n        <h2><ion-text [color]='board.boardNameColor'>Preview of '{{board.boardName}}' expense board</ion-text></h2>\\n        <app-color-selector (color)=\\\"selectColor($event,'title')\\\"></app-color-selector>\\n      </ion-item>\\n      <h2 *ngIf='board.boardName == \\\"\\\"'>\\n        No preview available yet\\n      </h2>\\n    </ion-card-title>\\n    <ion-card-subtitle>\\n      <ion-item lines='none' *ngIf='board.boardName != \\\"\\\"'>\\n        <ion-text [color]='board.boardSubtitleColor'>{{board.boardSubtitle}}</ion-text>\\n        <app-color-selector (color)=\\\"selectColor($event,'subtitle')\\\"></app-color-selector>\\n      </ion-item>\\n      <div *ngIf='board.boardName == \\\"\\\"'>Preview of the board will be shown here to make some final changes before adding it to your expenses board</div>\\n    </ion-card-subtitle>\\n  </ion-card-header>\\n  <ion-card-content>\\n    <ion-list lines='none' *ngIf=\\\"board.boardName != ''\\\">\\n      <ion-item *ngFor='let j of board.boardExpenses; let k = index'>\\n        <ion-label [color]='j.expensesColor'> {{j.expensesName}} </ion-label>\\n        <ion-buttons slot='end'>\\n          <ion-chip>\\n            <ion-label> {{j.expensesValue}} </ion-label>\\n          </ion-chip>\\n          <app-color-selector (color)=\\\"selectColor($event,k)\\\"></app-color-selector>\\n          <ion-button color='dark' (click)='deleteExpense(j)'>\\n            <ion-icon name=\\\"close\\\" slot='icon-only'></ion-icon>\\n          </ion-button>\\n        </ion-buttons>\\n      </ion-item>\\n    </ion-list>\\n    <ion-row *ngIf='board.boardName != \\\"\\\"'>\\n      <ion-col size='12' size-sm='6'>\\n        <ion-button\\n        fill='outline'\\n        expand='block'\\n        color='dark'\\n        (click)='raiseAddBoard()'\\n        >Add\\n        <ion-icon name=\\\"add\\\" slot='end'></ion-icon>\\n        </ion-button>\\n      </ion-col>\\n      <ion-col size='12' size-sm='6'>\\n        <ion-button\\n        fill='outline'\\n        expand='block'\\n        color='dark'\\n        (click)='raiseDelBoard()'\\n        >Delete\\n        <ion-icon name=\\\"trash\\\" slot='end'></ion-icon>\\n        </ion-button>\\n      </ion-col>\\n    </ion-row>\\n  </ion-card-content>\\n</ion-card>\"","export default \"<ion-content>\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col size='12' size-sm='8' offset-sm='2'>\\n        <app-expense-board-preview></app-expense-board-preview>\\n      </ion-col>\\n    </ion-row>\\n    <ion-row>\\n      <ion-col size='12' size-sm='4' offset-sm='2'>\\n        <ion-card class='ion-padding'>\\n          <ion-card-header>\\n            <ion-card-title><h1>\\n              New expenses board detail\\n            </h1></ion-card-title>\\n            <ion-card-subtitle>Enter the details of new expenses board</ion-card-subtitle>\\n          </ion-card-header>\\n          <ion-card-content>\\n            <form #boardForm='ngForm' (ngSubmit)='onSubmitBoardForm(boardForm)'>\\n              <ion-list lines='none'>\\n                <ion-item>\\n                  <ion-label position='floating'>Board Title</ion-label>\\n                  <ion-input type='text' clearInput\\n                  ngModel\\n                  name='boardTitle'\\n                  #boardTitle='ngModel'\\n                  required\\n                  ></ion-input>\\n                </ion-item>\\n                <ion-item *ngIf='boardTitle.touched && boardTitle.invalid'><ion-label color='danger'>Please enter board title</ion-label></ion-item>\\n                <ion-item>\\n                  <ion-label position='floating'>Board Subtitle</ion-label>\\n                  <ion-input type='text' clearInput\\n                  ngModel\\n                  name='boardSubtitle'\\n                  #boardSubtitle='ngModel'\\n                  required\\n                  ></ion-input>\\n                </ion-item>\\n                <ion-item *ngIf='boardSubtitle.touched && boardSubtitle.invalid'><ion-label color='danger'>Please enter board subtitle</ion-label></ion-item>\\n              </ion-list>\\n              <ion-row>\\n                <ion-col size='12'>\\n                  <ion-button type='submit'\\n                    expand='block'\\n                    fill='outline'\\n                    color='dark'\\n                    [disabled]='!(boardTitle.valid && boardSubtitle.valid)'\\n                    >\\n                    Create\\n                    <ion-icon name=\\\"create\\\" slot='end'></ion-icon>\\n                  </ion-button>\\n                </ion-col>\\n              </ion-row>\\n            </form>\\n          </ion-card-content>\\n        </ion-card>\\n      </ion-col>\\n      <ion-col size='12' size-sm='4'>\\n        <ion-card class='ion-padding'>\\n          <ion-card-header>\\n            <ion-card-title><h1>\\n              Add expenses to the board\\n            </h1></ion-card-title>\\n            <ion-card-subtitle>\\n              Add details of expenses to the board\\n            </ion-card-subtitle>\\n          </ion-card-header>\\n          <ion-card-content>\\n            <form #expensesForm='ngForm' (ngSubmit)='ongSubmitExpensesForm(expensesForm)'>\\n              <ion-list lines='none'>\\n                <ion-item>\\n                  <ion-label position='floating'>Expense Name</ion-label>\\n                  <ion-input type='text'\\n                  ngModel\\n                  #expenseName='ngModel'\\n                  name='expenseName'\\n                  clearInput\\n                  required\\n                  ></ion-input>\\n                </ion-item>\\n                <ion-item *ngIf='expenseName.invalid && expenseName.touched'><ion-label color='danger'>Expense name required</ion-label></ion-item>\\n              <ion-item>\\n                <ion-label position='floating'>Expense amount</ion-label>\\n                <ion-input\\n                type='number'\\n                ngModel\\n                #expenseAmount='ngModel'\\n                name='expenseAmount'\\n                clearInput\\n                required\\n                ></ion-input>\\n              </ion-item>\\n              <ion-item *ngIf='expenseAmount.invalid && expenseAmount.touched'><ion-label color='danger'>Expense amount required</ion-label></ion-item>\\n              </ion-list>\\n              <ion-row>\\n                <ion-col size='12'>\\n                  <ion-button\\n                  type='submit'\\n                  expand='block'\\n                  fill='outline'\\n                  color='dark'\\n                  [disabled]='!(expenseName.valid && expenseAmount.valid)'\\n                  >\\n                  Add\\n                  <ion-icon name=\\\"add-circle-outline\\\" slot='end'></ion-icon></ion-button>\\n                </ion-col>\\n              </ion-row>\\n            </form>\\n          </ion-card-content>\\n        </ion-card>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\\n\"","export default \"<ion-item lines='none'>\\n  <ion-label><ion-icon name=\\\"color-palette\\\"></ion-icon></ion-label>\\n  <ion-select\\n  [interfaceOptions]='myPopOver' interface='popover' (ionChange)='dispColor(color.value)' #color\\n  >\\n    <ion-select-option value='primary'>Primary</ion-select-option>\\n    <ion-select-option value='secondary'>Secondary</ion-select-option>\\n    <ion-select-option value='tertiary'>Tertiary</ion-select-option>\\n    <ion-select-option value='success'>Success</ion-select-option>\\n    <ion-select-option value='warning'>Warning</ion-select-option>\\n    <ion-select-option value='danger'>Danger</ion-select-option>\\n    <ion-select-option value='light'>Light</ion-select-option>\\n    <ion-select-option value='medium'>Medium</ion-select-option>\\n    <ion-select-option value='dark'>Dark</ion-select-option>\\n    <ion-select-option value='none'>None</ion-select-option>\\n  </ion-select>\\n</ion-item>\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcGxpY2F0aW9ucy9leHBlbnNlcy9leHBlbnNlLWJvYXJkL2V4cGVuc2UtYm9hcmQtcHJldmlldy9leHBlbnNlLWJvYXJkLXByZXZpZXcuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { ExpensesService } from '../../expenses.service';\nimport { AlertController } from '@ionic/angular';\nimport { ExpensesBoard } from '../../expenses-board';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-expense-board-preview',\n  templateUrl: './expense-board-preview.component.html',\n  styleUrls: ['./expense-board-preview.component.scss'],\n})\nexport class ExpenseBoardPreviewComponent implements OnInit {\n  board: ExpensesBoard;\n\n  constructor(\n    private eb: ExpensesService,\n    private alertController: AlertController,\n    private router: Router\n    ) { }\n\n  ngOnInit() {\n    this.board = {\n      boardName: '',\n      boardSubtitle: '',\n      boardExpenses: [],\n      boardNameColor: '',\n      boardSubtitleColor: ''\n    };\n    this.eb.getUpdatedCurrentBoard().subscribe(res => {\n      this.board = res;\n    });\n  }\n\n  async raiseAddBoard() {\n    const myAddAlert = await this.alertController.create({\n      header: 'Are you sure?',\n      subHeader: 'Add this board?',\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel'\n        },\n        {\n          text: 'Yes',\n          role: 'ok',\n          handler: () => {\n            this.addBoard();\n          }\n        }\n      ]\n    });\n    await myAddAlert.present();\n  }\n\n  async raiseDelBoard() {\n    const myDelAlert = await this.alertController.create({\n      header: 'Are you sure?',\n      subHeader: 'Delete this board?',\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel'\n        },\n        {\n          text: 'Yes',\n          role: 'ok',\n          handler: () => {\n            this.delBoard();\n          }\n        }\n      ]\n    });\n    await myDelAlert.present();\n  }\n\n  addBoard() {\n    this.eb.putIntoExpensesBoards(this.board);\n    this.eb.deleteCurrentBoard();\n    this.router.navigateByUrl('/applications/expenses/view-expenses');\n  }\n\n  delBoard() {\n    this.board = {\n      boardName: '',\n      boardSubtitle: '',\n      boardExpenses: [],\n      boardNameColor: '',\n      boardSubtitleColor: ''\n    };\n    this.eb.deleteCurrentBoard();\n  }\n\n  deleteExpense(index: number) {\n    this.board.boardExpenses.splice(index, 1);\n  }\n\n  selectColor(color: string, element: string) {\n    if (element == 'title') {\n      this.board.boardNameColor = color;\n    } else if (element == 'subtitle') {\n      this.board.boardSubtitleColor = color;\n    } else {\n      this.board.boardExpenses[Number(element)].expensesColor = color;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ExpenseBoardPage } from './expense-board.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ExpenseBoardPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ExpenseBoardPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ExpenseBoardPageRoutingModule } from './expense-board-routing.module';\n\nimport { ExpenseBoardPage } from './expense-board.page';\nimport { ExpenseBoardPreviewComponent } from './expense-board-preview/expense-board-preview.component';\nimport { ToolsModule } from '../tools/tools.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ExpenseBoardPageRoutingModule,\n    ToolsModule\n  ],\n  declarations: [ExpenseBoardPage, ExpenseBoardPreviewComponent]\n})\nexport class ExpenseBoardPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcGxpY2F0aW9ucy9leHBlbnNlcy9leHBlbnNlLWJvYXJkL2V4cGVuc2UtYm9hcmQucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { ExpensesBoard } from '../expenses-board';\nimport { ExpensesService } from '../expenses.service';\nimport { NgForm } from '@angular/forms';\nimport { Expenses } from '../expenses';\n\n@Component({\n  selector: 'app-expense-board',\n  templateUrl: './expense-board.page.html',\n  styleUrls: ['./expense-board.page.scss'],\n})\nexport class ExpenseBoardPage implements OnInit {\n  boards: ExpensesBoard[] = [];\n  expenses: Expenses[] = [];\n\n  currentBoard: ExpensesBoard;\n\n  constructor(private eb: ExpensesService) { }\n\n  ngOnInit() {\n    this.currentBoard = {\n      boardName: '',\n      boardSubtitle: '',\n      boardExpenses: [],\n      boardNameColor: '',\n      boardSubtitleColor: ''\n    };\n    this.eb.getUpdatedExpensesBoards().subscribe(res => {\n      this.boards = res;\n    });\n    this.eb.getUpdatedCurrentBoard().subscribe(res => {\n      this.currentBoard = res;\n      this.expenses = res.boardExpenses;\n    });\n  }\n\n  onSubmitBoardForm(boardData: NgForm) {\n    this.eb.putCurrentBoard({\n      boardName: boardData.value.boardTitle,\n      boardSubtitle: boardData.value.boardSubtitle,\n      boardExpenses: this.expenses,\n      boardNameColor: '',\n      boardSubtitleColor: ''\n    });\n    boardData.resetForm();\n  }\n\n  ongSubmitExpensesForm(expensesData: NgForm) {\n    this.expenses.push({\n      expensesName: expensesData.value.expenseName,\n      expensesValue: expensesData.value.expenseAmount,\n      expensesColor: ''\n    });\n    if (this.currentBoard) {\n      this.eb.putCurrentBoard(this.currentBoard = {\n        boardName: this.currentBoard.boardName,\n        boardSubtitle: this.currentBoard.boardSubtitle,\n        boardExpenses: this.expenses,\n        boardNameColor: '',\n        boardSubtitleColor: ''\n      });\n    }\n    expensesData.resetForm();\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcGxpY2F0aW9ucy9leHBlbnNlcy90b29scy9jb2xvci1zZWxlY3Rvci9jb2xvci1zZWxlY3Rvci5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-color-selector',\n  templateUrl: './color-selector.component.html',\n  styleUrls: ['./color-selector.component.scss'],\n})\nexport class ColorSelectorComponent implements OnInit {\n  @Output() color = new EventEmitter<string>();\n\n  constructor() { }\n\n  myPopOver: any = {\n    header: 'Color',\n    subheader: 'Pick one',\n    message: 'Please pick a color'\n  };\n\n  ngOnInit() {}\n\n  dispColor(color: string) {\n    this.color.emit(color);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ColorSelectorComponent } from './color-selector/color-selector.component';\nimport { IonicModule } from '@ionic/angular';\n\n\n\n@NgModule({\n  declarations: [ColorSelectorComponent],\n  imports: [\n    CommonModule,\n    IonicModule\n  ],\n  exports: [\n    ColorSelectorComponent\n  ]\n})\nexport class ToolsModule { }\n"],"sourceRoot":"webpack:///"}