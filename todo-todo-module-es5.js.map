{"version":3,"sources":["src/app/applications/todo/completed/completed.component.html","src/app/applications/todo/todo-list/todo-list.component.html","src/app/applications/todo/todo.page.html","src/app/applications/todo/completed/completed.component.scss","src/app/applications/todo/completed/completed.component.ts","src/app/applications/todo/todo-list/todo-list.component.scss","src/app/applications/todo/todo-list/todo-list.component.ts","src/app/applications/todo/todo-routing.module.ts","src/app/applications/todo/todo.module.ts","src/app/applications/todo/todo.page.scss","src/app/applications/todo/todo.page.ts","src/app/applications/todo/todo.service.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-reorder-group (ionItemReorder)=\\\"doReorder($event)\\\" disabled='false'>\\n  <ion-item *ngFor='let i of completed; let j = index' lines='none'>\\n    <ion-label [color]='i.todoColor' [id]='i.todoText' style=\\\"text-decoration: line-through;\\\">\\n      {{ i.todoText }}\\n    </ion-label>\\n    <ion-buttons slot='end'>\\n      <ion-reorder></ion-reorder>\\n      <ion-button (click)='undoCompleted(j)'>\\n        <ion-icon name=\\\"undo\\\" slot='icon-only'></ion-icon>\\n      </ion-button>\\n      <ion-button (click)=\\\"deleteCompleted(j)\\\">\\n        <ion-icon name=\\\"trash\\\" slot='icon-only'></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-item>\\n</ion-reorder-group>\"","export default \"<ion-reorder-group (ionItemReorder)=\\\"doReorder($event)\\\" disabled='false'>\\n  <ion-item *ngFor='let i of myList; let j = index' lines='none'>\\n    <ion-label [color]='i.todoColor' [id]='i.todoText'>\\n      {{ i.todoText }}\\n    </ion-label>\\n    <ion-buttons slot='end'>\\n      <ion-reorder></ion-reorder>\\n      <ion-button (click)='markDone(i.todoText,j)'>\\n        <ion-icon name=\\\"done-all\\\" slot='icon-only'></ion-icon>\\n      </ion-button>\\n      <ion-button (click)=\\\"delete(j)\\\">\\n        <ion-icon name=\\\"trash\\\" slot='icon-only'></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-item>\\n</ion-reorder-group>\"","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot='start'>\\n      <ion-menu-button></ion-menu-button>\\n      <ion-back-button defaultHref='/applications'></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>To Do</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col size='12' size-sm='8' offset-sm='2'>\\n        <ion-card>\\n          <ion-card-header>\\n            <ion-card-title class='ion-padding-start'><h1>Make a note</h1></ion-card-title>\\n          </ion-card-header>\\n          <ion-card-content>\\n            <ion-list lines='none'>\\n              <form #formData='ngForm' (ngSubmit)='processForm(formData)'>\\n                <ion-item>\\n                  <ion-label position='floating'>To Do</ion-label>\\n                  <ion-input type='text'\\n                    clearInput\\n                    ngModel\\n                    name='todo'\\n                    #todo='ngModel'\\n                    minlength='5'\\n                    required\\n                  ></ion-input>\\n                </ion-item>\\n                <ion-item *ngIf='todo.invalid && todo.touched'>\\n                  <ion-label color='danger'>Please fill the input</ion-label>\\n                </ion-item>\\n                <ion-item>\\n                  <ion-buttons slot='start'>\\n                    <ion-button type='submit' [disabled]='todo.invalid'>\\n                      <ion-icon name=\\\"add\\\" slot='icon-only'></ion-icon>\\n                    </ion-button>\\n                  </ion-buttons>\\n                  <ion-item>\\n                    <ion-icon name=\\\"color-palette\\\"></ion-icon>\\n                    <ion-select \\n                    [interfaceOptions]='myInterface' \\n                    interface='popover' \\n                    [disabled]='todo.invalid'\\n                    ngModel\\n                    #color='ngModel'\\n                    name='color'\\n                    value='none'\\n                    cancelText='Cancel'\\n                    >\\n                      <ion-select-option value='primary'>Primary</ion-select-option>\\n                      <ion-select-option value='secondary'>Secondary</ion-select-option>\\n                      <ion-select-option value='tertiary'>Tertiary</ion-select-option>\\n                      <ion-select-option value='success'>Success</ion-select-option>\\n                      <ion-select-option value='warning'>Warning</ion-select-option>\\n                      <ion-select-option value='danger'>Danger</ion-select-option>\\n                      <ion-select-option value='light'>Light</ion-select-option>\\n                      <ion-select-option value='medium'>Medium</ion-select-option>\\n                      <ion-select-option value='dark'>Dark</ion-select-option>\\n                      <ion-select-option value='none' selected='none'>None</ion-select-option>\\n                    </ion-select>\\n                  </ion-item>\\n                </ion-item>\\n              </form>\\n            </ion-list>\\n          </ion-card-content>\\n        </ion-card>\\n      </ion-col>\\n    </ion-row>\\n    <ion-row>\\n      <ion-col size='12' size-sm='4' offset-sm='2'>\\n        <ion-card>\\n          <ion-card-header>\\n            <ion-card-title class='ion-padding-start'>\\n              <h3 *ngIf='myNote.length > 0'>My todo list</h3>\\n              <h3 *ngIf='myNote.length < 1'>Nothing to see here</h3>\\n            </ion-card-title>\\n            <ion-card-subtitle class='ion-padding-start'>Keep your important notes here</ion-card-subtitle>\\n          </ion-card-header>\\n          <ion-card-content>\\n            <app-todo-list></app-todo-list>\\n          </ion-card-content>\\n        </ion-card>\\n      </ion-col>\\n      <ion-col size='12' size-sm='4'>\\n        <ion-card>\\n          <ion-card-header>\\n            <ion-card-title class='ion-padding-start'>\\n              <h3 *ngIf='completedNote.length > 0'>Completed</h3>\\n              <h3 *ngIf='completedNote.length < 1'>Nothing completed yet</h3>\\n            </ion-card-title>\\n            <ion-card-subtitle class='ion-padding-start'>Keep your completed notes here</ion-card-subtitle>\\n          </ion-card-header>\\n          <ion-card-content>\\n            <app-completed></app-completed>\\n          </ion-card-content>\\n        </ion-card>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\\n\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcGxpY2F0aW9ucy90b2RvL2NvbXBsZXRlZC9jb21wbGV0ZWQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { TodoService } from '../todo.service';\nimport { Todo } from '../todo';\n\n@Component({\n  selector: 'app-completed',\n  templateUrl: './completed.component.html',\n  styleUrls: ['./completed.component.scss'],\n})\nexport class CompletedComponent implements OnInit {\n  completed: Todo[] = [];\n\n  constructor(\n    private td: TodoService\n  ) { }\n\n  ngOnInit() {\n    this.td.getUpdatedCompleted().subscribe(res => {\n      this.completed = res;\n    });\n  }\n\n  doReorder(ev: any) {\n    this.td.reorderCompleted(ev.detail.complete(this.completed));\n  }\n\n  deleteCompleted(listIndex: number) {\n    this.td.popCompleted(listIndex);\n  }\n\n  undoCompleted(indexNumber: number) {\n    this.td.undoCompleted(indexNumber);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcGxpY2F0aW9ucy90b2RvL3RvZG8tbGlzdC90b2RvLWxpc3QuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, ViewChild, Input } from '@angular/core';\nimport { IonReorderGroup } from '@ionic/angular';\nimport { Todo } from '../todo';\nimport { TodoService } from '../todo.service';\n\n@Component({\n  selector: 'app-todo-list',\n  templateUrl: './todo-list.component.html',\n  styleUrls: ['./todo-list.component.scss'],\n})\nexport class TodoListComponent implements OnInit {\n  @ViewChild(IonReorderGroup, {static: false}) reorderGroup: IonReorderGroup;\n  myList: Todo[];\n\n  constructor(private td: TodoService) { }\n\n  ngOnInit() {\n    this.td.getUpdatedList().subscribe(res => {\n      this.myList = res;\n    }, err => {\n      console.log(err);\n    });\n  }\n\n  doReorder(ev: any) {\n    this.td.reorderItem(ev.detail.complete(this.myList));\n  }\n\n  delete(listIndex: number) {\n    this.td.popItem(listIndex);\n  }\n\n  markDone(noteId: string, itemIndex: number) {\n    document.getElementById(noteId).style.textDecoration = 'line-through';\n    this.td.putCompleted(itemIndex);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TodoPage } from './todo.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TodoPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TodoPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TodoPageRoutingModule } from './todo-routing.module';\n\nimport { TodoPage } from './todo.page';\n\nimport { TodoListComponent } from './todo-list/todo-list.component';\nimport { CompletedComponent } from './completed/completed.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    TodoPageRoutingModule\n  ],\n  declarations: [TodoPage, TodoListComponent, CompletedComponent]\n})\nexport class TodoPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcGxpY2F0aW9ucy90b2RvL3RvZG8ucGFnZS5zY3NzIn0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { TodoService } from './todo.service';\nimport { Todo } from './todo';\nimport { AlertController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-todo',\n  templateUrl: './todo.page.html',\n  styleUrls: ['./todo.page.scss'],\n})\nexport class TodoPage implements OnInit {\n  pageLink = '/applications';\n  myNote: Todo[] = [];\n  completedNote: Todo[] = [];\n\n  myInterface: any = {\n    header: 'Color',\n    subheader: 'Select a color',\n    message: 'Select a color for your note'\n  };\n\n  constructor(\n    private td: TodoService,\n    private alCtl: AlertController\n    ) { }\n\n  async presentAlert() {\n    const myAlert = await this.alCtl.create({\n      header: 'Exists',\n      message: 'Note already exists',\n      buttons: ['OK']\n    });\n    await myAlert.present();\n  }\n\n  ngOnInit() {\n    this.td.getUpdatedList().subscribe(res => {\n      this.myNote = res;\n    });\n    this.td.getUpdatedCompleted().subscribe(res => {\n      this.completedNote = res;\n    });\n  }\n\n  processForm(formData: NgForm) {\n    const localNotes = [];\n    if (this.myNote.length > 0) {\n      this.myNote.forEach(val => {\n        localNotes.push(val.todoText);\n      });\n    }\n    if (localNotes.includes(formData.value.todo)) {\n      this.presentAlert();\n      formData.resetForm();\n      return;\n    }\n    this.td.putList({\n      todoText: formData.value.todo,\n      todoColor: formData.value.color\n    });\n    formData.resetForm();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Todo } from './todo';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TodoService {\n  private todoList: Todo[] = [];\n  private completedList: Todo[] = [];\n  private updatedList = new Subject<Todo[]>();\n  private updatedCompleted = new Subject<Todo[]>();\n\n  constructor() { }\n\n  putList(item: Todo) {\n    this.todoList.push(item);\n    this.updatedList.next([...this.todoList]);\n  }\n\n  getUpdatedList() {\n    return this.updatedList.asObservable();\n  }\n\n  getList() {\n    return [...this.todoList];\n  }\n\n  popItem(itemIndex: number) {\n    this.todoList.splice(itemIndex, 1);\n    this.updatedList.next([...this.todoList]);\n  }\n\n  reorderItem(itemArray: Todo[]) {\n    this.todoList = itemArray;\n    this.updatedList.next([...this.todoList]);\n  }\n\n  reorderCompleted(itemArray: Todo[]) {\n    this.completedList = itemArray;\n    this.updatedCompleted.next([...this.completedList]);\n  }\n\n  putCompleted(itemIndex: number) {\n    const cl: Todo = this.todoList[itemIndex];\n    this.completedList.push(cl);\n    this.updatedCompleted.next([...this.completedList]);\n    this.delCompletedFromTodo(itemIndex);\n  }\n\n  getCompleted() {\n    return [...this.completedList];\n  }\n\n  getUpdatedCompleted() {\n    return this.updatedCompleted.asObservable();\n  }\n\n  delCompletedFromTodo(index: number) {\n    this.todoList.splice(index, 1);\n    this.updatedList.next([...this.todoList]);\n  }\n\n  popCompleted(itemIndex: number) {\n    this.completedList.splice(itemIndex, 1);\n    this.updatedCompleted.next([...this.completedList]);\n  }\n\n  deleteCompleted(index: number) {\n    this.completedList.splice(index, 1);\n    this.updatedCompleted.next([...this.completedList]);\n  }\n\n  undoCompleted(index: number) {\n    const cl: Todo = this.completedList[index];\n    this.putList(cl);\n    this.deleteCompleted(index);\n  }\n}\n"],"sourceRoot":"webpack:///","file":"todo-todo-module-es5.js"}