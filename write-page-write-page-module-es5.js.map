{"version":3,"sources":["src/app/applications/chat-web-app/chat-page/write-page/write-page.page.html","src/app/applications/chat-web-app/chat-page/write-page/write-page-routing.module.ts","src/app/applications/chat-web-app/chat-page/write-page/write-page.module.ts","src/app/applications/chat-web-app/chat-page/write-page/write-page.page.scss","src/app/applications/chat-web-app/chat-page/write-page/write-page.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot='start'>\\n      <ion-menu-button></ion-menu-button>\\n      <ion-back-button defaultHref='/applications/chat-web-app/chat-page'></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>write-page</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col size='12' size-sm='8' offset-sm='2'>\\n        <ion-card class='ion-padding'>\\n          <ion-card-header>\\n            <ion-card-title class='ion-padding-start'>Compose Message</ion-card-title>\\n            <ion-card-subtitle class='ion-padding-start'>Please enter the message that you want to send to</ion-card-subtitle>\\n          </ion-card-header>\\n          <ion-card-content>\\n\\n            <form #messageForm='ngForm' (ngSubmit)=\\\"messageFormProcessor(messageForm)\\\">\\n              <ion-list lines='none'>\\n                <ion-item>\\n                  <ion-label position='floating'>Write a message</ion-label>\\n                  <ion-textarea\\n                  ngModel\\n                  #message=ngModel\\n                  name='message'\\n                  clearInput\\n                  required\\n                  ></ion-textarea>\\n                </ion-item>\\n                <ion-item *ngIf='message.invalid && message.touched'>\\n                  <ion-label><p><ion-text color='danger'>You cannot leave an empty message</ion-text></p></ion-label>\\n                </ion-item>\\n              </ion-list>\\n              <ion-buttons slot='start'>\\n                <ion-button type='submit' color='primary'>\\n                  <ion-icon name=\\\"send\\\" slot='icon-only'></ion-icon>\\n                </ion-button>\\n              </ion-buttons>\\n            </form>\\n\\n          </ion-card-content>\\n        </ion-card>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { WritePagePage } from './write-page.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: WritePagePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class WritePagePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { WritePagePageRoutingModule } from './write-page-routing.module';\n\nimport { WritePagePage } from './write-page.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    WritePagePageRoutingModule\n  ],\n  declarations: [WritePagePage]\n})\nexport class WritePagePageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcGxpY2F0aW9ucy9jaGF0LXdlYi1hcHAvY2hhdC1wYWdlL3dyaXRlLXBhZ2Uvd3JpdGUtcGFnZS5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { WriteService } from './write.service';\nimport { UsernameService } from '../username.service';\nimport { Message } from './message';\nimport { ToastController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-write-page',\n  templateUrl: './write-page.page.html',\n  styleUrls: ['./write-page.page.scss'],\n})\nexport class WritePagePage implements OnInit {\n\n  constructor(\n    private writeSrv: WriteService,\n    private usernameSrv: UsernameService,\n    private toastCtl: ToastController\n  ) { }\n  private message: Message;\n\n  ngOnInit() {\n  }\n\n  messageFormProcessor(messageFormData: NgForm) {\n    if (this.messageValidator(messageFormData.value.message)) {\n\n      // Fetch Date and time\n      const date = new Date();\n\n      this.message = {\n        receiverName: this.writeSrv.getReceiverDetails().receiverName,\n        senderName: this.usernameSrv.getUsername(),\n        messageBody: messageFormData.value.message,\n        messageDate: date.toLocaleDateString(),\n        messageTime: date.toLocaleTimeString()\n      };\n      this.writeSrv.sendMessage(this.message);\n      this.messageSent();\n    } else {\n      return;\n    }\n    messageFormData.resetForm();\n  }\n\n  messageValidator = (message: string) => {\n    return message.length > 1;\n  }\n\n  // Show a toast when message is sent\n  async messageSent() {\n    const sent = await this.toastCtl.create({\n      message: 'Message sent successfully!',\n      duration: 1000,\n      color: 'primary'\n    });\n    sent.present();\n  }\n\n}\n"],"sourceRoot":"webpack:///","file":"write-page-write-page-module-es5.js"}